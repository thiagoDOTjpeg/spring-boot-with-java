name: Continuos Integration and Delivery with Github Actions

on:
  push:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Login to Google Cloud Platform
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Configure Docker Authentication for Google Cloud Artifact Registry
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v4
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
#
#      - name: Login to Amazon ECR
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@v2

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven

      - name: Build application .jar
        working-directory: ./spring-boot-with-java
        run: mvn clean package

      - name: Docker compose Build
        working-directory: ./spring-boot-with-java
        run: docker compose build

#      - name: Tag and Push Docker Image to Amazon Container Registry - ECR
#        run: |
#          docker tag ${{ secrets.DOCKER_USERNAME }}/spring_boot_with_java:latest ${{ secrets.IMAGE_REPO_URL }}:latest
#          docker tag ${{ secrets.DOCKER_USERNAME }}/spring_boot_with_java:latest ${{ secrets.IMAGE_REPO_URL }}:${{ github.run_id }}
#
#          docker push ${{ secrets.IMAGE_REPO_URL }}:latest
#          docker push ${{ secrets.IMAGE_REPO_URL }}:${{ github.run_id }}
#
#      - name: Download task definition
#        run: |
#          aws ecs describe-task-definition --task-definition ${{ secrets.TASK_DEFINITION_NAME }} --query taskDefinition > task-definition.json
#
#      - name: Fill in the new image ID in the Amazon ECS task definition
#        id: task-def
#        uses: aws-actions/amazon-ecs-render-task-definition@v1
#        with:
#          task-definition: task-definition.json
#          container-name: ${{ secrets.CONTAINER_NAME }}
#          image: ${{ secrets.IMAGE_REPO_URL }}
#
#      - name: Deploy Amazon ECS task definition
#        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
#        with:
#          task-definition:  ${{ steps.task-def.outputs.task-definition }}
#          service: ${{ secrets.SERVICE_NAME }}
#          cluster: ${{ secrets.CLUSTER_NAME }}
#          wait-for-service-stability: true

      - name: Push to Google Cloud Artifact Registry
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/spring_boot_with_java:latest ${{ secrets.REGESTRY_INFO }}/spring_boot_with_java:latest
          docker tag ${{ secrets.DOCKER_USERNAME }}/spring_boot_with_java:latest ${{ secrets.REGESTRY_INFO }}/spring_boot_with_java:${{ github.run_id }}
          
          docker push ${{ secrets.REGESTRY_INFO }}/spring_boot_with_java:latest
          docker push ${{ secrets.REGESTRY_INFO }}/spring_boot_with_java:${{ github.run_id }}

      - name: Deploy to Google Cloud Run
        run: |
          gcloud run deploy spring-boot-with-java \ 
          --image ${{ secrets.REGESTRY_INFO }}/spring_boot_with_java:latest \
          --region us-central1 \
          --platform managed \
          --allow-unauthenticated
          

      - name: Push to Docker Hub Container Registry
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/spring_boot_with_java:latest ${{ secrets.DOCKER_USERNAME }}/spring_boot_with_java:${{ github.run_id }}
          
          docker push ${{ secrets.DOCKER_USERNAME }}/spring_boot_with_java:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/spring_boot_with_java:${{ github.run_id }}
          
